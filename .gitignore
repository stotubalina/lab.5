# Байт-компилированные/оптимизированные/DLL-файлы
__pycache__ /
* .py [ код ]
* $py.класс

# Расширения C
* .so

# Распространение/упаковка
.Питон
построить /
развивать-яйца /
расстояние /
загрузки /
яйца /
.яйца /
библиотека /
библиотека64 /
части /
срасст /
вар /
колеса /
пип-колесо-метаданные /
поделиться / питон-колеса /
* .яйцо-информация /
.установлено.cfg
* .яйцо
МАНИФЕСТ

# PyInstaller
#   Обычно эти файлы пишутся скриптом python из шаблона
#   до того, как PyInstaller создаст исполняемый файл, чтобы добавить в него дату/другую информацию.
* .манифест
* .спецификация

# Логи установщика
пип-log.txt
pip-delete-this-directory.txt

# Модульные тесты / отчеты о покрытии
htmlcov /
.токс /
.нокс /
.покрытие
.покрытие. *
.кеш
носовые тесты.xml
покрытие.xml
* .обложка
* .ру, обложка
.гипотеза /
.pytest_cache /

# Переводы
* .мо
* .горшок

# Материал Джанго:
* .лог
local_settings.py
db.sqlite3
db.sqlite3-журнал

# Фляга:
экземпляр /
.webassets-кэш

# Парсер:
.скрейпи

# документация по сфинксу
документы / _сборка /

# Пибилдер
цель /

# Блокнот Юпитер
.ipynb_checkpoints

# IPython
профиль_по умолчанию /
ipython_config.py

# пиенв
.python-версия

# пипенв
#    Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в систему контроля версий.
#    Тем не менее, в случае совместной работы, если есть зависимости от конкретной платформы или зависимости
#    не имея кросс-платформенной поддержки, pipenv может устанавливать зависимости, которые не работают или не работают
#    устанавливаем все необходимые зависимости.
# Pipfile.lock

# ПЭП 582; используется, например, github.com/David-OConnor/pyflow
__pypackages__ /

# Сельдерей
celerybeat-график
celerybeat.pid

# файлы, проанализированные SageMath
* .sage.py

# Среды
.env
.venv
окр /
Венв /
ENV /
окр.бак /
venv.bak /

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта веревки
.ropeproject

# документация mkdocs
/ сайт

# mypy
.mypy_cache /
.dmypy.json
dmypy.json

# Проверка типа костра
.pyre /

# Байт-компилированные/оптимизированные/DLL-файлы
__pycache__ /
* .py [ код ]
* $py.класс

# Расширения C
* .so

# Распространение/упаковка
.Питон
окр /
построить /
развивать-яйца /
расстояние /
загрузки /
яйца /
.яйца /
библиотека /
библиотека64 /
части /
срасст /
вар /
* .яйцо-информация /
.установлено.cfg
* .яйцо

# PyInstaller
#   Обычно эти файлы пишутся скриптом python из шаблона
#   до того, как PyInstaller создаст исполняемый файл, чтобы добавить в него дату/другую информацию.
* .манифест
* .спецификация

# Логи установщика
пип-log.txt
pip-delete-this-directory.txt

# Модульные тесты / отчеты о покрытии
htmlcov /
.токс /
.покрытие
.покрытие. *
.кеш
носовые тесты.xml
покрытие.xml
* , обложка
.гипотеза /

# Переводы
* .мо
* .горшок

# Материал Джанго:
* .лог
local_settings.py

# Фляга:
экземпляр /
.webassets-кэш

# Парсер:
.скрейпи

# документация по сфинксу
документы / _сборка /

# Пибилдер
цель /

# Блокнот IPython
.ipynb_checkpoints

# пиенв
.python-версия

# файл расписания ударов сельдерея
celerybeat-график

# дотенв
.env

# виртуальная среда
Венв /
ENV /

# Настройки проекта Spyder
.spyderproject

# Настройки проекта веревки
.ropeproject
# ## Шаблон VirtualEnv
# Виртуалэнв
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
.Питон
[ си-бемоль ] в
[ Ii ] включать
[ Ll ] иб
[ Лл ] ib64
[ Ll ] местный
[ Ss ] скрипты
pyvenv.cfg
.venv
пип-selfcheck.json
# ## Шаблон JetBrains
# Охватывает IDE JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio и Webstorm
# Ссылка: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Пользовательские вещи:
.идея / рабочая область.xml
.идея / задачи.xml
.идея / словари
.идея / vcs.xml
.idea / jsLibraryMappings.xml

# Конфиденциальные или часто используемые файлы:
.idea / источники данных.ids
.идея / источники данных.xml
.idea / источники данных.local.xml
.идея / sqlDataSources.xml
.идея / динамический.xml
.идея / uiDesigner.xml

# Грейдл:
.идея / gradle.xml
.идея / библиотеки

# Плагин Mongo Explorer:
.идея / mongoSettings.xml

.идея /

# # Файловый формат проекта:
* .iws

# # Файлы, специфичные для плагина:

# IntelliJ
/ вне /

# плагин mpeltonen/sbt-idea
.idea_modules /

# JIRA-плагин
atlassian-ide-plugin.xml

# Плагин Crashlytics (для Android Studio и IntelliJ)
com_crashlytics_export_strings.xml
Crashlytics.properties
Crashlytics-build.properties
ткань.свойства